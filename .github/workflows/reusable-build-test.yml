on:
  workflow_call:
    inputs:
      solution-path:
        type: string
        description: 'The relative path to the .sln file (default: current directory)'
        required: false
        default: '.'
      solution-name:
        type: string
        description: 'The name of the solution file (e.g., MyApp.sln)'
        required: true
      report-coverage-title:
        type: string
        description: 'A title for the coverage report (default: Reporte de Cobertura)'
        required: false
        default: 'Reporte de Cobertura'

env:
  DOTNET_VERSION: '8.0.x' # The .NET SDK version to use
  FULL_SOLUTION_PATH: ${{ inputs.solution-path }}/${{ inputs.solution-name }}

jobs:
  build:
    name: Build
    permissions: write-all
    runs-on: self-hosted
    timeout-minutes: 5
        
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: dotnet restore ${{ env.FULL_SOLUTION_PATH }}

      - name: Run build
        run: dotnet build ${{ env.FULL_SOLUTION_PATH }} --configuration Release
            
       # üìù Comment on PR when blocked
      - name: Comment on PR if Build Fail
        if: ${{ failure() && github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: build-test
          recreate: true
          message: |
            ‚ùå The build failed. Please fix the issues before pushing again.
       
  test:
    name: Test
    permissions: write-all
    needs: [build]
    runs-on: self-hosted
    timeout-minutes: 5
        
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check for Source Code Files
        run: |
          # Find source code files excluding Program.cs, Migrations, and *DbContext.cs, *Context.cs
          SOURCE_FILES=$(find ${{ inputs.solution-path }} -type f -name "*.cs" \
            ! -name "Program.cs" \
            ! -name "*DbContext.cs" \
            ! -name "*Context.cs" \
            ! -path "*/Migrations/*")
          
          if [[ -n "$SOURCE_FILES" ]]; then
            echo "üîç Source code files found, tests will be required."
            echo "required_tests=true" >> $GITHUB_ENV
          else
            echo "‚úÖ No significant source code found, tests are not required."
            echo "required_tests=false" >> $GITHUB_ENV
          fi

      - name: Generate Test Results and Coverage Reports
        if: ${{ env.required_tests == 'true' }}
        run: dotnet test ${{ env.FULL_SOLUTION_PATH }} --configuration Release --verbosity normal --logger "trx;LogFilePrefix=test-results" --results-directory ./test-results --collect:"XPlat Code Coverage" --settings .runsettings

      - name: Uploaded Results Report
        if: ${{ always() && env.required_tests == 'true' }}
        uses: dorny/test-reporter@v1
        with:
          name: Uploaded Results Report
          path: ${{ inputs.solution-path }}/test-results/test-results*.trx
          reporter: dotnet-trx
          path-replace-backslashes: false
          list-suites: all
          list-tests: all
          max-annotations: 10
          fail-on-error: true
          fail-on-empty: true
          only-summary: false

      # üìù Comment on PR when blocked
      - name: Comment on PR if Tests Fail
        if: ${{ failure() && github.event_name == 'pull_request' && env.required_tests == 'true' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: build-test
          recreate: true
          message: |
            ‚ùå The tests failed. Please fix the issues before pushing again.

      - name: Join Coverage Reports
        if: ${{ env.required_tests == 'true' }}
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.9
        with:
          reports: ${{ inputs.solution-path }}/test-results/**/coverage.cobertura.xml
          targetdir: coverage-report
          reporttypes: 'Html;Cobertura'
          verbosity: 'Verbose'
          tag: '${{ github.run_number }}_${{ github.run_id }}'
          title: '${{ inputs.report-coverage-title }}'

      - name: Upload Coverage Report
        if: ${{ env.required_tests == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: Coverage Report       
          path: coverage-report

      - name: Generate Coverage Table
        uses: IngSoft-DA2/workflows@v1.2
        if: ${{ env.required_tests == 'true'}}
        with:
          filename: coverage-report/Cobertura.xml
          threshold: 90

      - name: Write Coverage Table to Job Summary
        if: ${{ always() && hashFiles('coverage-table.md') != '' && github.event_name == 'pull_request' }}
        run: cat coverage-table.md >> $GITHUB_STEP_SUMMARY
        
      - name: Add Coverage Table as PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ always() && hashFiles('coverage-table.md') != '' && github.event_name == 'pull_request' }}
        with:
          header: build-test
          recreate: true
          path: 'coverage-table.md'
      
      - name: Add Missing Test as PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ always() && hashFiles('coverage-table.md') == '' && github.event_name == 'pull_request' && env.required_tests == 'true' }}
        with:
          header: build-test
          recreate: true
          message: '‚ö†Ô∏è Code coverage report not found. Tests required.'

      
