name: 'Generate Coverage Table'
description: 'Parses Cobertura XML and creates a Markdown summary with thresholds.'
author: 'Daniel Acevedo'
inputs:
  filename:
    description: 'Path to the Cobertura XML file'
    required: true
  threshold:
    description: 'Coverage threshold (e.g., 90 means 90%)'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Generate Markdown table from Cobertura XML
      shell: bash
      run: |
        python3 <<EOF
        import xml.etree.ElementTree as ET
        import os
        import sys
      
        filename = "${{ inputs.filename }}"
        threshold = float("${{ inputs.threshold }}")
      
        if not os.path.isfile(filename):
            raise FileNotFoundError(f"File not found: {filename}")
      
        tree = ET.parse(filename)
        root = tree.getroot()
      
        table = f"| Assembly        | Line Coverage | Branch Coverage | Health (over {threshold}%) |\n"
        table += "|----------------|---------------|-----------------|-----------------------------|\n"
      
        all_pass = True
        total_line_rate = 0.0
        total_branch_rate = 0.0
        count = 0
      
        for package in root.findall("packages/package"):
            name = package.attrib["name"]
            line_rate = float(package.attrib.get("line-rate", 0)) * 100
            branch_rate = float(package.attrib.get("branch-rate", 0)) * 100
      
            total_line_rate += line_rate
            total_branch_rate += branch_rate
            count += 1
      
            passed = "✅" if line_rate >= threshold and branch_rate >= threshold else "❌"
            if passed == "❌":
                all_pass = False
      
            table += f"| {name:<15} | {line_rate:>5.2f}%        | {branch_rate:>5.2f}%         | {passed}                         |\n"
      
        avg_line = total_line_rate / count if count > 0 else 0.0
        avg_branch = total_branch_rate / count if count > 0 else 0.0
        summary_pass = "✅" if avg_line >= threshold and avg_branch >= threshold else "❌"
      
        table += "|----------------|---------------|-----------------|-----------------------------|\n"
        table += f"| **Summary**     | **{avg_line:>5.2f}%**     | **{avg_branch:>5.2f}%**      | {summary_pass}                         |\n"
      
        if not all_pass:
            table += f"\n*Minimum allowed code coverage is {threshold}% for line rate and branch rate*\n"
        else:
            table += f"\n*Awesome! All assemblies passed the minimum {threshold}% threshold 🚀*\n"
      
        with open("coverage-table.md", "w") as f:
            f.write(table)
      
        print("\n" + table)
      
        if not all_pass:
            print(f"❌ Minimum threshold to pass for all assemblies is: {threshold}%.")
            sys.exit(1)
        else:
            print(f"✅ All assemblies passed the minimum threshold {threshold}%.")
        # if avg_line < threshold:
        #   print(f"❌ Summary line coverage is below threshold ({avg_line:.2f}% < {threshold}%).")
        #   sys.exit(1)
        # else:
        #   print(f"✅ Summary line coverage meets the threshold ({avg_line:.2f}% ≥ {threshold}%).")
        EOF
